// -*- C++ -*-
//===-- execution ---------------------------------------------------------===//
//
// Copyright (C) 2017-2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// This file incorporates work covered by the following copyright and permission
// notice:
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
//
//===----------------------------------------------------------------------===//

#ifndef _TEST_SUPPORT_STDLIB_EXECUTION
#define _TEST_SUPPORT_STDLIB_EXECUTION

// #include_next <execution> // None of the standard libraries PSTL is built on top have the <execution> header yet.

#include "oneapi/dpl/pstl/pstl_config.h"
#include "oneapi/dpl/pstl/execution_defs.h"

#define _PSTL_EXECUTION_POLICIES_DEFINED 1

#if _PSTL_ALGORITHM_FORWARD_DECLARED
#    include "oneapi/dpl/pstl/glue_algorithm_impl.h"

#    include "oneapi/dpl/internal/exclusive_scan_by_segment_impl.h"
#    include "oneapi/dpl/internal/inclusive_scan_by_segment_impl.h"
#    include "oneapi/dpl/internal/binary_search_impl.h"
#    include "oneapi/dpl/internal/reduce_by_segment_impl.h"
#endif

#if _PSTL_MEMORY_FORWARD_DECLARED
#    include "oneapi/dpl/pstl/glue_memory_impl.h"
#endif

#if _PSTL_NUMERIC_FORWARD_DECLARED
#    include "oneapi/dpl/pstl/glue_numeric_impl.h"
#endif

#if _PSTL_CPP17_EXECUTION_POLICIES_PRESENT
_PSTL_PRAGMA_MESSAGE_POLICIES(
    "The <Parallel STL> execution policies are defined in the namespace oneapi::dpl::execution")
#    include "oneapi/dpl/pstl/algorithm_impl.h"
#    include "oneapi/dpl/pstl/numeric_impl.h"
#    include "oneapi/dpl/pstl/parallel_backend.h"
#else
#    include "oneapi/dpl/pstl/glue_execution_defs.h"
_PSTL_PRAGMA_MESSAGE_POLICIES(
    "The <Parallel STL> execution policies are injected into the standard namespace std::execution")
#endif

#define __PSTL_USE_STANDALONE 1

#if _PSTL_BACKEND_SYCL
namespace oneapi
{
namespace dpl
{
namespace execution
{
using namespace oneapi::dpl::execution::__dpstd;
} // end namespace execution
} // end namespace dpl
} // end namespace oneapi

namespace dpstd
{
namespace execution
{
using namespace oneapi::dpl::execution;
using namespace oneapi::dpl::execution::__dpstd;
using oneapi::dpl::execution::v1::is_execution_policy;
} // end namespace execution
} // end namespace dpstd
#endif

namespace dpl = oneapi::dpl;

#endif /* _TEST_SUPPORT_STDLIB_EXECUTION */
