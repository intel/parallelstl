// -*- C++ -*-
//===-- algorithm ---------------------------------------------------------===//
//
// Copyright (C) 2017-2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// This file incorporates work covered by the following copyright and permission
// notice:
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
//
//===----------------------------------------------------------------------===//

#ifndef _TEST_SUPPORT_STDLIB_ALGORITHM
#define _TEST_SUPPORT_STDLIB_ALGORITHM

#include <algorithm>
#include "oneapi/dpl/pstl/pstl_config.h"

#if !_PSTL_ALGORITHM_FORWARD_DECLARED
// If not declared, pull in forward declarations
#    include "oneapi/dpl/pstl/glue_algorithm_defs.h"
#    include "oneapi/dpl/internal/by_segment_extension_defs.h"
#    include "oneapi/dpl/internal/binary_search_extension_defs.h"
#    define _PSTL_ALGORITHM_FORWARD_DECLARED 1
#endif

#if _PSTL_EXECUTION_POLICIES_DEFINED
// If <execution> has already been included, pull in implementations
#    include "oneapi/dpl/pstl/glue_algorithm_impl.h"

#    include "oneapi/dpl/internal/exclusive_scan_by_segment_impl.h"
#    include "oneapi/dpl/internal/inclusive_scan_by_segment_impl.h"
#    include "oneapi/dpl/internal/binary_search_impl.h"
#    include "oneapi/dpl/internal/reduce_by_segment_impl.h"
#endif

namespace oneapi
{
namespace std
{
using ::std::binary_search;
using ::std::equal_range;
using ::std::lower_bound;
using ::std::upper_bound;
} // namespace std

namespace dpl
{
using namespace oneapi::std;
} // namespace dpl

} // namespace oneapi
namespace dpl = oneapi::dpl;

#endif /* _TEST_SUPPORT_STDLIB_ALGORITHM */
